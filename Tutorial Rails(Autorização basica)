
############ Implementar Declarative Authorization ############
	################# Necessario Devise Implementado
===============================================================
##instalar gem
	gem 'declarative_authorization'

##################################

==================================================
##Criar arquivo na pasta config
	config/authorization_rules	

	authorization do

		role :tipo do
			has_permition_on [controller] , :to => [privilegios]
		end

	end	

	privileges do
    	privilege :manage, :includes => [:index, :show, :new, :create, :edit, :update, :destroy]
    	privilege :read,   :includes => [:index, :show]
   	 	privilege :create, :includes => [:new]
    	privilege :update, :includes => [:edit]
    	privilege :delete, :includes => [:destroy]
	end
##########################################

=======================================================
##Criar models Role e Permission

	#Criar model Role
		rails g model Role name value description

	#Criar model Permission
		rails g model Permission user:belongs_to role:belongs_to

##################################################

======================================================
##Adicionar relacionamento nos models
	
	#Relacionar Usuario a Role, atraves de Permission
		
		=> app/model/user.rb

			has_many :permissions
			has_many :roles, :through =>:permissions

		def role_symbols
			(roles || []).map{|r| r.name.undescore.to_sym}
		end
	
	#Relacionar Role a usuario, atraves de Permission
		
		=> app/model/role.rb

			has_many :permissions
			has_many :users, :through =>:permissions		


#######################################################

====================================================
##Adicionar filtros a admin_controller.rb

	filter_access_to :all

	# Filtro do declarative authorization para todos os controllers da parte ADMIN
	before_filter { |c| Authorization.current_user = c.current_user }

	#mensagem em caso de usuário não autorizado
	protected
		def permission_denied
			flash[:error] = t("declarative_authorization.permission_denied")
			redirect_to request.referer.present? ? :back : root_url
		end	

######################################################

=========================================================

##Adicionar campo de Roles a criação de um usuario

	##views/admin/users/_form.html.erb
		
		....
			<%= f.association :roles, as: :check_boxes %>
		.....

#############################################	

